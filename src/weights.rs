
//! Autogenerated weights for `peaq_pallet_mor`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-13, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `OmegaThinkpad`, CPU: `Intel(R) Core(TM) i5-10310U CPU @ 1.70GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/peaq-node
// benchmark
// pallet
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// peaq-pallet-mor
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// weight.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use sp_std::marker::PhantomData;

/// Weight functions for `peaq_pallet_mor`.
pub struct WeightInfo<T>(PhantomData<T>);

impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	// Storage: PeaqDid OwnerStore (r:1 w:0)
	// Storage: PeaqMor MachineRegister (r:1 w:1)
	// Storage: PeaqMor MorConfigStorage (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	fn get_registration_reward() -> Weight {
		Weight::from_parts(103_191_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	// Storage: PeaqDid OwnerStore (r:1 w:0)
	// Storage: PeaqMor MachineRegister (r:1 w:0)
	// Storage: PeaqMor PeriodRewardStorage (r:1 w:0)
	// Storage: System Account (r:1 w:0)
	fn get_online_rewards() -> Weight {
		Weight::from_parts(60_260_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	// Storage: PeaqMor MorConfigStorage (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	fn pay_machine_usage() -> Weight {
		Weight::from_parts(82_005_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: PeaqMor RewardsRecordStorage (r:1 w:1)
	// Storage: PeaqMor MorConfigStorage (r:0 w:1)
	fn set_configuration() -> Weight {
		Weight::from_parts(40_939_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	// Storage: System Account (r:1 w:0)
	fn fetch_pot_balance() -> Weight {
		Weight::from_parts(30_821_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}
